apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: django-unit
    app.kubernetes.io/instance: django-unit
    app.kubernetes.io/version: 3.2.2-1.25.0-python3.9
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: django-application-k8s-example
    app.kubernetes.io/managed-by: kubectl
  name: django-unit
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: django-unit
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: django-unit
        app.kubernetes.io/version: 3.2.2-1.25.0-python3.9
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: django-application-k8s-example
        app.kubernetes.io/managed-by: kubectl
        app.kubernetes.io/name: django-unit  # Service  selector look here
    spec:
      containers:
      - name: django
        image: corwinz/dj:82bdd63
        ports:
        - containerPort: 80
        envFrom:
          - secretRef:
              name: django-secret-v1
          - configMapRef:    
              name: django-configmap-v1
        resources:
          limits:
            memory: 256Mi
            cpu: "0.5"
          requests:
            memory: 128Mi
            cpu: "0.1"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: django-unit-cluster-ip
    app.kubernetes.io/instance: django-unit-cluster-ip
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: django-application-k8s-example
    app.kubernetes.io/managed-by: kubectl
  name: django-unit-cluster-ip
spec:
  selector:
    app.kubernetes.io/name: django-unit # Select pods
  ports:
    - protocol: TCP
      port: 8080 # port on K8 Cluster
      targetPort: 80 # port on container
